<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Ryan's Blog</title><link>https://zhihaoruan.xyz/posts/projects/</link><description>Recent content in Projects on Ryan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Dec 2021 02:41:46 +0000</lastBuildDate><atom:link href="https://zhihaoruan.xyz/posts/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Volume Rendered ReSTIR in Vulkan</title><link>https://zhihaoruan.xyz/posts/projects/565-final-project/</link><pubDate>Mon, 27 Dec 2021 02:41:46 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/565-final-project/</guid><description>This is a project of a Vulkan implementation of Fast Volume Rendering with Spatiotemporal Reservoir Resampling. It achieves the following:
Vulkan ray tracing pipeline with nvpro and Vulkan Ray Tracing KHR extension. Volume assets loading and rendering through OpenVDB. ReSTIR algorithm rendering on GLTF scene and volume assets. Authors Zhihao Ruan (ruanzh@seas.upenn.edu), Shubham Sharma (sshubh@seas.upenn.edu), Raymond Yang (rayyang@seas.upenn.edu) Tested on: Windows 10 Home 21H1 Build 19043.1288, Ryzen 7 3700X @ 3.</description></item><item><title>Vulkan Grass Rendering</title><link>https://zhihaoruan.xyz/posts/projects/565-vulkan-grass-rendering/</link><pubDate>Mon, 27 Dec 2021 00:54:07 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/565-vulkan-grass-rendering/</guid><description>Tested on: Windows 10 Home 21H1 Build 19043.1288, Ryzen 7 3700X @ 3.59GHz 48GB, RTX 2060 Super 8GB Highlights This project implements physically-based grass rendering &amp;amp; culling with Vulkan compute shaders:
Physically-based real-time rendering of grass blades; 3 different culling tests: orientation culling, view-frustum culling, distance culling; Tessellating Bezier curves into grass blades with GLSL tessellation shader A detailed instruction of this project can be found here.</description></item><item><title>CUDA Path Tracer with À-Trous Denoiser</title><link>https://zhihaoruan.xyz/posts/projects/565-cuda-path-tracer/</link><pubDate>Mon, 27 Dec 2021 00:43:29 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/565-cuda-path-tracer/</guid><description>Tested on: Ubuntu 20.04 LTS, Ryzen 3700X @ 2.22GHz 48GB, RTX 2060 Super @ 7976MB CUDA Path Tracer Highlights Finished path tracing core features:
diffuse shaders perfect specular reflection 1st-bounce ray intersection caching radix sort by material type path continuation/termination by Thrust stream compaction Finished Advanced Features:
Refraction with Fresnel effects using Schlick&amp;rsquo;s approximation Stochastic sampled anti-aliasing Physically-based depth of field OBJ mesh loading with tinyobjloader Background: Ray Tracing Ray tracing is a technique commonly used in rendering.</description></item><item><title>Minecraft Game Programming</title><link>https://zhihaoruan.xyz/posts/projects/560proj/</link><pubDate>Wed, 09 Dec 2020 14:30:11 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/560proj/</guid><description>In the fall of 2020, I finally had a chance to explore the field of computer graphics at University of Pennsylvania, and did a very interesting course project which builds a simplified Minecraft from scratch. This game is built on OpenGL 3.2 with Qt 5.15.0. Through building this game, I learned a lot about OpenGL rendering pipeline, game engine &amp;amp; texture mapping.
Demo Video Overview Minecraft is originally well-known for its block-like structure.</description></item><item><title>Real-Time On-Device Flow Statistics Detection and Prediction</title><link>https://zhihaoruan.xyz/posts/projects/450proj/</link><pubDate>Sat, 29 Aug 2020 13:40:39 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/450proj/</guid><description>This project was served as the Undergraduate Major Design Experience at UM-SJTU Joint Institute, Shanghai Jiao Tong University.
Background: The Impact of COVID-19 The outbreak of novel coronavirus COVID-19 in 2020 has brought huge attention to the administration of human society. &amp;ldquo;Social distancing&amp;rdquo; has been advocated as a very effective method to fight the virus. In order to facilitate the implementation of social distancing, we propose an idea of building a portable device that is capable of detect and predict flow statistics in real time, in order to provide insights and suggestions for traffic management.</description></item><item><title>SLAM — Simultaneous Localization And Mapping</title><link>https://zhihaoruan.xyz/posts/projects/467proj-slam/</link><pubDate>Mon, 13 Jan 2020 21:47:27 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/467proj-slam/</guid><description>&lt;p>Simultaneous Localization And Mapping, also known as SLAM, is a set of very important techniques in robotics, and it&amp;rsquo;s still in active research. It aims at developing different algorithms for figuring out the position of the robot in the real world by the robot itself.&lt;/p></description></item><item><title>An Interactive Game — Step On the White Tiles!</title><link>https://zhihaoruan.xyz/posts/projects/373proj/</link><pubDate>Fri, 03 May 2019 17:55:23 +0000</pubDate><guid>https://zhihaoruan.xyz/posts/projects/373proj/</guid><description>&lt;blockquote>
&lt;p>Probably one of the best interactive game projects I have seen in the class.&lt;/p>
— &lt;cite>Prof. Alanson Sample and Prof. Matt Smith, University of Michigan&lt;/cite>&lt;/p>
&lt;/blockquote>
&lt;br>
&lt;p>&lt;strong>&amp;gt; &lt;em>This project is developed together with &lt;a href="https://regina8023.github.io">Regina (Jingliang Ren)&lt;/a>, &lt;a href="https://voyager1998.github.io">Kun Huang&lt;/a> and Shiyu Liu.&lt;/em>&lt;/strong>&lt;/br>
&lt;strong>&amp;gt; &lt;em>This post is written in shared effort with &lt;a href="https://regina8023.github.io">Regina (Jingliang Ren)&lt;/a>.&lt;/em>&lt;/strong>&lt;/br>
&lt;strong>&amp;gt; &lt;em>Special thanks to them for all their contributions!&lt;/em>&lt;/strong>&lt;/p></description></item></channel></rss>